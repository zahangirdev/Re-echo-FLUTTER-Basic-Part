import 'package:flutter/material.dart';

void main() {
  runApp(const BlogApp());
}

class BlogApp extends StatelessWidget {
  const BlogApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Simple Blog App',
      theme: ThemeData(primarySwatch: Colors.blue),
      home: const HomePage(),
    );
  }
}

// ---------------- Home Page ----------------
class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  // Blog posts stored in a List
  List<Map<String, String>> posts = [];

  // Delete function
  void _deletePost(int index) {
    setState(() {
      posts.removeAt(index);
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("My Blog")),
      body: posts.isEmpty
          ? const Center(child: Text("No posts yet. Add one!"))
          : ListView.builder(
              itemCount: posts.length,
              itemBuilder: (context, index) {
                return ListTile(
                  title: Text(posts[index]['title']!),
                  subtitle: Text(posts[index]['content']!),
                  trailing: Row(
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      IconButton(
                        icon: const Icon(Icons.edit, color: Colors.green),
                        onPressed: () async {
                          final updatedPost = await Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (_) => AddEditPage(
                                post: posts[index],
                              ),
                            ),
                          );
                          if (updatedPost != null) {
                            setState(() {
                              posts[index] = updatedPost;
                            });
                          }
                        },
                      ),
                      IconButton(
                        icon: const Icon(Icons.delete, color: Colors.red),
                        onPressed: () => _deletePost(index),
                      ),
                    ],
                  ),
                );
              },
            ),
      floatingActionButton: FloatingActionButton(
        onPressed: () async {
          final newPost = await Navigator.push(
            context,
            MaterialPageRoute(builder: (_) => const AddEditPage()),
          );
          if (newPost != null) {
            setState(() {
              posts.add(newPost);
            });
          }
        },
        child: const Icon(Icons.add),
      ),
    );
  }
}
// ---------------- Add/Edit Page ----------------
class AddEditPage extends StatefulWidget {
  final Map<String, String>? post; // null means new post

  const AddEditPage({super.key, this.post});

  @override
  State<AddEditPage> createState() => _AddEditPageState();
}

class _AddEditPageState extends State<AddEditPage> {
  final _formKey = GlobalKey<FormState>();
  late TextEditingController titleController;
  late TextEditingController contentController;

  @override
  void initState() {
    super.initState();
    titleController = TextEditingController(text: widget.post?['title'] ?? "");
    contentController =
        TextEditingController(text: widget.post?['content'] ?? "");
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
          title: Text(widget.post == null ? "Add Post" : "Edit Post")),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                controller: titleController,
                decoration: const InputDecoration(labelText: "Title"),
                validator: (value) =>
                    value!.isEmpty ? "Enter a title" : null,
              ),
              TextFormField(
                controller: contentController,
                decoration: const InputDecoration(labelText: "Content"),
                validator: (value) =>
                    value!.isEmpty ? "Enter content" : null,
              ),
              const SizedBox(height: 20),
              ElevatedButton(
                child: Text(widget.post == null ? "Add" : "Update"),
                onPressed: () {
                  if (_formKey.currentState!.validate()) {
                    Navigator.pop(context, {
                      "title": titleController.text,
                      "content": contentController.text,
                    });
                  }
                },
              ),
            ],
          ),
        ),
      ),
    );
  }
}


//
